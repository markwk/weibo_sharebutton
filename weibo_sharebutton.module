<?php
// $Id$
/**
 * @file
 * Main module file for the Weibo Share Button
 */

/**
 * Implements hook_perm().
 * Permissions for Weibo Sharebutton
 */
function weibo_sharebutton_permission() {
  return array(
    'administer weibo sharebutton' => array(
      'title' => t('Administer Weibo Sharebutton'),
    ),
    'view weibo sharebutton' => array(
      'title' => t('View Weibo Sharebutton'),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function weibo_sharebutton_menu() {
	  $items['admin/config/services/weibo-sharebutton'] = array(
	    'title'            => 'Weibo Share Button',
	    'description'      => 'Configure Weibo Share Button settings',
	    'page callback'    => 'drupal_get_form',
	    'page arguments'   => array('weibo_sharebutton_admin_settings'),
	    'access arguments' => array('administer weibo sharebutton'),
	    'file'             => 'weibo_sharebutton.admin.inc',
	  );
	  return $items;
	}

/**
 * Implements hook_theme().
 */
function weibo_sharebutton_theme() {
  return array(
    'weibo_sharebutton_button' => array(
      'arguments' => array(
      'node' => NULL,
      'url' => NULL,
      'css' => '',
      'size' => '1',
      'icontype' => '0',
      'count' => 1,
      'syntax' => 'weibosharescript',
      ),
    )
  );
}

/**
 * Implements hook_node_view().
 */
function weibo_sharebutton_node_view($node, $view_mode, $langcode) {

  if (in_array($node->type, variable_get('weibo_sharebutton_node_types', array()), TRUE)
    && user_access('view weibo sharebutton')) {

    $locations = variable_get('weibo_sharebutton_node_location', array('full'));
    $default = array(
       'count' => 0,
       'size' => '1',  // standard
       'css' => 'margin: 0 1em 1em 1em;float:right',
       'icontype' => '0',
		   'syntax' => 'weibosharescript',
		);
    $button_settings = array_merge($default, variable_get('weibo_sharebutton_button_settings', array()));
    $button_settings['node'] = $node;

    if (!empty($locations[$view_mode]) && empty($locations['link'])) {
				$node->content['weibo_sharebutton'] = array(
        '#markup' => theme('weibo_sharebutton_button__' . $node->type, $button_settings),
        '#weight' => variable_get('weibo_sharebutton_weight', -10),
      );
    }
    if (!empty($locations[$view_mode]) && !empty($locations['link'])) {
      $node->content['links']['#links']['node_weibo_sharebutton_link'] = array(
       'title' => theme('weibo_sharebutton_button__' . $node->type, $button_settings),
       'html' => TRUE,
      );
    }
  }
}


/**
 * Returns HTML for the Weibo Share button.
 *
 * @param $variables
 *   An associative array containing:
 *   - url: (optional) An absolute URL to use in the button.
 *   - object: (optional) The node object. (Only will be use its nid)
 *   - size:  (optional) A string 'small', 'medium', 'standard', 'tall'
 *   - count: (optional) A integer 0 or 1 (0 default will not print aggregated counting
 *   - css: (optional) A string with inline CSS rules for the wrapper.
 *
 * @ingroup themeable
 */
function theme_weibo_sharebutton_button($variables) {
	global $base_url;

	  // URL negotiation, with 2 fallbacks
	  $node = $variables['node'];
	  if (!empty($node) && isset($node->nid)) {
	    $url = url('node/' . $node->nid, array('absolute' => TRUE));
	  }
	  elseif (!empty($variables['url'])) {
	    $url = check_url($variables['url']);
	  }
	  else {
	    $url = $base_url;
	  }

	$appkey = variable_get('weibo_sharebutton_appkey', '');
	$syntax = $variables['syntax'];
	$count = $variables['count'];
	$size = $variables['size'];
	$icontype = $variables['icontype'];
	$weibo_btn = $icontype + $size;

	// @todo: Properly Manage Sharebutton Size
	if ($icontype == 0) {
		$weibo_btn_w = 90;
		$weibo_btn_h = 70;
	}
	elseif ($icontype == 3) {
		$weibo_btn_w = 142;
		$weibo_btn_h = 66;
	}
	else {
		$weibo_btn_w = 90;
		$weibo_btn_h = 70;
	}	
	
	$output = "<script type=\"text/javascript\" charset=\"utf-8\"> \n";
	$output .= "(function(){ \n";
	$output .= "var param = { \n";
	$output .= "url:location.href, \n";
	$output .= "type:'$weibo_btn', \n";
	$output .= "count:'$count', \n";
	$output .= "appkey:'$appkey', \n"; 
	$output .= "rnd:new Date().valueOf() \n";
	$output .= "} \n";
	$output .= "var temp = []; \n";
	$output .= "for( var p in param ){ \n";
	$output .= "temp.push(p + '=' + encodeURIComponent( param[p] || '' ) ) \n";
	$output .= "} \n";
	$output .= "document.write('<iframe allowTransparency=\"true\" frameborder=\"0\" scrolling=\"no\" src=\"http://hits.sinajs.cn/A1/weiboshare.html?' + temp.join('&') + '\" width=\"$weibo_btn_w\" height=\"weibo_btn_h\"></iframe>') \n";
	$output .= "})() \n";		
	$output .= "</script>";	

    $button = $output;

	// Wrap it and serve it
	  if ($variables['css'] !== 'nowrapper') {
	    $css =   empty($variables['css'])   ? '' : 'style="' .  check_plain($variables['css']) . '"';
	    $button = '<div class="weibo_sharebutton-wrapper" '. $css . ' >' . $button . '</div>';
	  }
	  return $button;
}

/**
 * Implements hook_block_info().
 * @Todo: Add configuration
 */
function weibo_sharebutton_block($op = 'list', $delta = 0, $edit = array()) {

}

/**
 * A block content function.
 * @Todo: Implement Block contents
 */
function weibo_sharebutton_block_contents($which_block) {
	
}

/**
 * @} End of "Weibo Sharebutton Module".
 */

 
